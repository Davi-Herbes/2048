{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://compilers-test/./src/app.ts","webpack://compilers-test/./src/collorPalette.ts","webpack://compilers-test/webpack/bootstrap","webpack://compilers-test/./src/index.ts"],"sourcesContent":["type Div = HTMLDivElement;\n\n// É uma forma de fazer com que a chave tenha o índice que você quer\nimport { colorPalette } from \"./collorPalette\";\n\nexport class Game {\n    squares: Div[] = Array.from(document.querySelectorAll(\".game-squares\")) as Div[]; // Transforma em array os quadrados do jogo\n\n    emptySquares: Div[] = [];\n\n    arrowCLickComands: { [key: string]: () => void } = {\n        ArrowUp: () => {\n            this.arrowCLickFunctionality(\"up\");\n        },\n        ArrowDown: () => {\n            this.arrowCLickFunctionality(\"down\");\n        },\n        ArrowLeft: () => {\n            this.arrowCLickFunctionality(\"left\");\n        },\n        ArrowRight: () => {\n            this.arrowCLickFunctionality(\"right\");\n        },\n    };\n\n    start() {\n        this.correctingValues();\n        this.arrowsClickCapture();\n    }\n\n    // Responsável por capturar os clicks das setas\n    arrowsClickCapture() {\n        document.onkeydown = (e) => {\n            // Checa se os nomes das chaves do arrowCLickFunctionality incluem a tecla que foi apertada\n            if (Object.keys(this.arrowCLickComands).includes(e.key)) {\n                this.arrowCLickComands[e.key]();\n            }\n        };\n    }\n\n    correctingValues() {\n        this.checkEmptySquares();\n        this.pushEmptySquares();\n        this.newValue();\n        this.colorInSquare();\n    }\n\n    // Adiciona um novo valor em algum quadrado\n    newValue() {\n        const theChosenSquare =\n            this.emptySquares[Math.floor(Math.random() * this.emptySquares.length)];\n\n        if (Math.floor(Math.random() * 10) === 1) {\n            theChosenSquare.innerHTML = \"4\";\n        } else {\n            theChosenSquare.innerHTML = \"2\";\n        }\n    }\n\n    // Adiciona os quadrados que estão vazio no array\n    pushEmptySquares() {\n        for (let i = 0; i < this.squares.length; i++) {\n            if (this.squares[i].innerHTML === \"\") {\n                this.emptySquares.push(this.squares[i]);\n            }\n        }\n    }\n\n    // Checa se os quadrados que estão no array foram preenchidos\n    checkEmptySquares() {\n        for (let i = 0; i < this.emptySquares.length; i++) {\n            if (this.emptySquares[i].innerHTML !== \"\") {\n                this.emptySquares.splice(i, 1);\n            }\n        }\n    }\n\n    // Função responsável por dar a cor ao quadrado a partir do número escrito nele\n    colorInSquare() {\n        for (let i = 0; i < this.squares.length; i++) {\n            // O backgroundColor do quadrado = a cor correspondente ao número do quadrado\n            let square = this.squares[i].innerHTML;\n            if (!square) square = \"0\";\n            this.squares[i].style.backgroundColor = colorPalette[Number(this.squares[i].innerHTML)];\n        }\n    }\n\n    arrowCLickFunctionality(direction: string) {\n        const linhas: number[][] = [];\n\n        // A função desse for é ir em cada linha e criar um array que contém os novos valores dessa nova linha e no final colocar no array linhas as novas linhas geradas\n        for (let i = 0; i < 4; i++) {\n            const linha: number[] = [];\n\n            let indice = 0;\n\n            switch (direction) {\n                case \"up\":\n                    indice = i;\n                    break;\n                case \"right\":\n                    indice = i + 3;\n                    break;\n            }\n\n            for (indice; indice < i + 13; indice += 4) {\n                console.log(indice);\n                if (this.squares[indice].innerText !== \"\") {\n                    linha.push(Number(this.squares[indice].innerText));\n                }\n            }\n\n            const novaLinha: number[] = [];\n\n            let numeroAnterior = linha[0]; // O número anterior vai ser o primeiro da linha\n            // Se a linha só tiver um número, ele já coloca o primeiro número na novaLinha\n            if (linha.length === 1) {\n                novaLinha.push(numeroAnterior);\n            } else {\n                for (let indice = 1; indice < linha.length; indice++) {\n                    const numeroAtual = linha[indice];\n\n                    // O número anterior vai ser 0 no caso em que os dois números anteriores eram iguais, então o numeroAnterior passa a ser o numeroAtual\n                    if (numeroAnterior === 0) {\n                        numeroAnterior = numeroAtual;\n                        if (indice === linha.length - 1) {\n                            novaLinha.push(numeroAtual);\n                        }\n                    } else if (numeroAnterior === numeroAtual) {\n                        novaLinha.push(numeroAnterior + numeroAtual); // Se o número anterior e o atual forem iguais, será colocado a soma deles e vai zerar o numeroAnterior\n                        numeroAnterior = 0;\n                    } else if (numeroAnterior !== numeroAtual) {\n                        novaLinha.push(numeroAnterior); // Se forem diferentes, o numeroAnterior vai ser adicionado e o numeroAnterior passa a ser o numeroAtual\n                        numeroAnterior = numeroAtual;\n\n                        // Se for o último laço, o numeroAtual também será adicionado\n                        if (indice === linha.length - 1) {\n                            novaLinha.push(numeroAtual);\n                        }\n                    }\n                }\n            }\n            linhas.push(novaLinha);\n        }\n        console.log(linhas);\n\n        // A função desse for é passar em cada quadrado e colocar o valor novo que ele deve receber\n        let x = 0;\n        for (let i = 0; i < this.squares.length; i += 4) {\n            this.squares[i].innerText = `${linhas[0][x] || \"\"}`;\n            this.squares[i + 1].innerText = `${linhas[1][x] || \"\"}`;\n            this.squares[i + 2].innerText = `${linhas[2][x] || \"\"}`;\n            this.squares[i + 3].innerText = `${linhas[3][x] || \"\"}`;\n\n            x++;\n        }\n        this.correctingValues();\n    }\n}\n\nexport const game = new Game();\n","export const colorPalette: { [key: number]: string } = {\n    0: \"#aaa\",\n    2: \"#eee\",\n    4: \"#ddd\",\n    8: \"#c97f6b\",\n    16: \"#a65f4c\",\n    32: \"#8c362d\",\n    64: \"#750f05\",\n    128: \"#d1c690\",\n    256: \"#bdad60\",\n    512: \"#9c8922\",\n    1024: \"#73620a\",\n    2048: \"#73620a\",\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { game } from \"./app\";\n\ngame.start();\n"],"names":[],"sourceRoot":""}